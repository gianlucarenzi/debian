#!/bin/bash

################### DISTRO COMPILER SECTION ############################

# CODENAME, MACHINE sono i valori istantanei sulla macchina che sta
# eseguendo questo script!

case "$DISTRO" in
	stretch)
		# Il kernel in Stretch e' il 4.12 ed il toolchain di default e'
		# il GCC v6.3. Unifichiamo anche questo nel build.
		CROSS_GCC_INSTALL_PATH="${HOMEDIR}/gcc-linaro-6.3.1-2017.05-x86_64_arm-linux-gnueabihf"
		CROSS_GCC_INSTALL="${HOMEDIR}"
		CROSS_GCC="${HOMEDIR}/gcc-linaro-6.3.1-2017.05-x86_64_arm-linux-gnueabihf/bin"
		CROSS_COMPILER="arm-linux-gnueabihf-"
		CROSS_GCC_INSTALL="${HOMEDIR}"
		MTUNE=""
		MARCH="-march=armv7-a"
		MCPU="$MTUNE $MARCH"
		MOPCODE="-Uarm"
		MFPU="-mfloat-abi=hard -mfpu=neon"
		export INCLUDES="${INCLUDES} -I."
		export CFLAGS="${CFLAGS} $MCPU $MOPCODE $MFPU -O3 -funroll-loops"
		export CXXFLAGS="${CXXFLAGS} $MCPU $MOPCODE $MFPU -O3 -funroll-loops"
		echo "OLD VERSION. UNSUPPORTED"
		exit 1
		;;
	buster)
		# Il kernel in Buster e' il 4.19 ed il toolchain di default e'
		# il GCC v8.3. Unifichiamo anche questo nel build.
		CROSS_GCC_INSTALL_PATH="${HOMEDIR}/gcc-arm-8.3-2019.03-x86_64-arm-linux-gnueabihf"
		CROSS_GCC_INSTALL="${HOMEDIR}"
		CROSS_GCC="${HOMEDIR}/gcc-arm-8.3-2019.03-x86_64-arm-linux-gnueabihf/bin"
		CROSS_COMPILER="arm-linux-gnueabihf-"
		CROSS_GCC_INSTALL="${HOMEDIR}"
		MTUNE=""
		MARCH="-march=armv7-a"
		MCPU="$MTUNE $MARCH"
		MOPCODE="-Uarm"
		MFPU="-mfloat-abi=hard -mfpu=neon"
		export INCLUDES="${INCLUDES} -I."
		export CFLAGS="${CFLAGS} $MCPU $MOPCODE $MFPU -O3 -funroll-loops"
		export CXXFLAGS="${CXXFLAGS} $MCPU $MOPCODE $MFPU -O3 -funroll-loops"
		;;
	# Aggiungere qui le varie distribuzioni necessarie (ubuntu, mint...)
	*)
		# Common path (valido per 32 bit)
		CROSS_GCC_INSTALL_PATH="${HOMEDIR}/arm-none-linux-gnueabi"
		CROSS_GCC_INSTALL="${HOMEDIR}"
		CROSS_GCC="${HOMEDIR}/arm-none-linux-gnueabi/bin"
		CROSS_COMPILER="arm-none-linux-gnueabi-"
		MTUNE=""
		MARCH="-march=armv7-a"
		MCPU="$MTUNE $MARCH"
		MOPCODE="-Uarm"
		MFPU="-mfloat-abi=softfp -mfpu=neon"
		export INCLUDES="${INCLUDES} -I."
		export CFLAGS="${CFLAGS} $MCPU $MOPCODE $MFPU -O3 -funroll-loops"
		export CXXFLAGS="${CXXFLAGS} $MCPU $MOPCODE $MFPU -O3 -funroll-loops"
		;;
esac

################### DISTRO COMPILER SECTION ############################

